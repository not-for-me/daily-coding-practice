/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package io.notforme

import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertNotNull

class TipCalculatorTest {

    data class TestDataSet(val bill: Float, val tipPercentage: Int, val expectedTip: Float)

    @Test
    fun `testCalculator given valid bill and tipPercentage then return valid bill instance`() {
        val testDataSet = listOf(
                TestDataSet(100.0F, 10, 10.0F),
                TestDataSet(1F, 15, 0.15F),
                TestDataSet(11.25F, 15, 1.69F)   // round case
        )

        testDataSet.forEach {
            val bill: Bill = TipCalculator().calculate(it.bill, it.tipPercentage)

            assertNotNull(bill)
            assertEquals(it.bill, bill.total - bill.tip)
            assertEquals(it.tipPercentage.toFloat() / 100, bill.tipRate)
            assertEquals(it.expectedTip, bill.tip)
            assertEquals(it.bill + it.expectedTip, bill.total)
        }
    }

    @Test(expected = IllegalArgumentException::class)
    fun `testCalculator given negative bill then throw IllegalArgumentException`() {
        val testBill = -1F
        val testTipPercentage = 10

        TipCalculator().calculate(testBill, testTipPercentage)
    }

    @Test(expected = IllegalArgumentException::class)
    fun `testCalculator given bill is smaller than one then throw IllegalArgumentException`() {
        val testBill = 0.5F
        val testTipPercentage = 10

        TipCalculator().calculate(testBill, testTipPercentage)
    }


    @Test(expected = IllegalArgumentException::class)
    fun `testCalculator given negative tipPercentage then throw IllegalArgumentException`() {
        val testBill = 10F
        val testTipPercentage = -5

        TipCalculator().calculate(testBill, testTipPercentage)
    }

    @Test(expected = IllegalArgumentException::class)
    fun `testCalculator given tipPercentage is smaller than ten then throw IllegalArgumentException`() {
        val testBill = 10F
        val testTipPercentage = 5

        TipCalculator().calculate(testBill, testTipPercentage)
    }

    // TOOD: user input mock???...
    @Test
    fun `runCalculator test`() {
        TipCalculator().runCalculator()
    }
}
